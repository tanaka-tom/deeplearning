---
layout: post
title: "自然言語処理を学ぼう #7 サービスデプロイ編"
date: 2018-12-16 21:00:00 +0900
categories: natural
youtube: 'ODwSNHCWKEA'
---

## 目標
これまで検証してきた言語処理の手法の中で最も文章類似度判定について精度が良さそうだったword2vecを使い、サービスを立ち上げる

## 構成
- [flask](http://flask.pocoo.org/)
    - Pythonの軽量ウェブアプリケーションフレームワーク
    - APIを作成するのに使う
- [Digital Ocean](https://m.do.co/c/af63c7f33763)
    - サービスを稼働させるサーバー
    - 定額で利用出来る
    - 今回は月5ドルプランを利用

### Digital Oceanにした経緯
- Google App Engineでのサービス公開に挑戦し失敗
    - Google App Engineにはモデルファイルがおけない（１GB）
    - Google Cloud Storageに置いて読み込ませようとしたが、gensimのword2vecはパスからの読み込みにしか対応していない
- Digital OceanのCommunityにやりたいことに近い情報が公開されていた

## 作り方
- REST API化
    - [github](https://github.com/tanaka-tom/estimate-movie-summary)
- DigitalOceanの設定
    - [Digital Ocean (Ubuntu) Flask, Nginx, uWSGI](https://regonn.qrunch.io/logs/0v0Xr669mh24MChy?fbclid=IwAR2wDn31RUH3_OJ9PXWKzkCZ0KvGPX90v5XVeDEY78oBfTr5OdGExOqLjnI)
    - [How To Serve Flask Applications with uWSGI and Nginx on Ubuntu \| DigitalOcean](https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uswgi-and-nginx-on-ubuntu-18-04)

## 実際の動き
文章のIDを受け取って、JSON形式で類似文章を返す

※動画公開時にはサービスを潰しています
